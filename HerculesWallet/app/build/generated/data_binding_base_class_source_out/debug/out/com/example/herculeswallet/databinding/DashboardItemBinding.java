// Generated by view binder compiler. Do not edit!
package com.example.herculeswallet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.herculeswallet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final GridLayout datiCrypto;

  @NonNull
  public final TextView nameCrypto;

  @NonNull
  public final TextView priceCrypto;

  @NonNull
  public final TextView quantityCrypto;

  @NonNull
  public final ConstraintLayout secondConstraint;

  private DashboardItemBinding(@NonNull ConstraintLayout rootView, @NonNull GridLayout datiCrypto,
      @NonNull TextView nameCrypto, @NonNull TextView priceCrypto, @NonNull TextView quantityCrypto,
      @NonNull ConstraintLayout secondConstraint) {
    this.rootView = rootView;
    this.datiCrypto = datiCrypto;
    this.nameCrypto = nameCrypto;
    this.priceCrypto = priceCrypto;
    this.quantityCrypto = quantityCrypto;
    this.secondConstraint = secondConstraint;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dati_crypto;
      GridLayout datiCrypto = ViewBindings.findChildViewById(rootView, id);
      if (datiCrypto == null) {
        break missingId;
      }

      id = R.id.name_crypto;
      TextView nameCrypto = ViewBindings.findChildViewById(rootView, id);
      if (nameCrypto == null) {
        break missingId;
      }

      id = R.id.price_crypto;
      TextView priceCrypto = ViewBindings.findChildViewById(rootView, id);
      if (priceCrypto == null) {
        break missingId;
      }

      id = R.id.quantity_crypto;
      TextView quantityCrypto = ViewBindings.findChildViewById(rootView, id);
      if (quantityCrypto == null) {
        break missingId;
      }

      id = R.id.second_constraint;
      ConstraintLayout secondConstraint = ViewBindings.findChildViewById(rootView, id);
      if (secondConstraint == null) {
        break missingId;
      }

      return new DashboardItemBinding((ConstraintLayout) rootView, datiCrypto, nameCrypto,
          priceCrypto, quantityCrypto, secondConstraint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
